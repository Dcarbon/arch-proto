syntax = "proto3";

// Protobuf gen
package pbg;
option go_package = "/pbg";

import "common.proto";
import "iot_models.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Active Volume metric
message AVM {
  string id       = 1;
  string r        = 2;
  string s        = 3;
  string v        = 4;
  string data     = 5;
  string value    = 6;  // Extracted data
  int64 createdAt = 7;
}

message AVMs {
  int64 total       = 1;
  repeated AVM data = 2;
}

message RAVMCreate {
  bool isIotSign = 1;
  string signer  = 2;
  string r       = 3;
  string s       = 4;
  string v       = 5;
  string data    = 6;
}

message RMAVMGetList {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get metric request",
      description: "Get metric request",
      required: [ "skip", "limit" ],
      // extensions: {
      //   key: "x-a-bit-of-everything-foo"
      //   value: { string_value: "bar" }
      // }
    }
  };

  int64 skip     = 1;
  int64 limit    = 2;
  int64 sensorId = 3;
  int64 iotId    = 4;
}

message RIotMint {
  int64 nonce       = 1;
  string amount     = 2;
  string iotAddress = 3;
  string r          = 4;
  string s          = 5;
  string v          = 6;
}

message RIotGetMintSigns {
  int64 from  = 1;
  int64 to    = 2;
  int64 iotId = 3;
  Sort sort   = 4;
  int64 limit = 5;
}

message RIotGetMinted {
  int64 from     = 1;
  int64 to       = 2;
  int64 iotId    = 3;
  int32 interval = 4;
}

message RIotUpdateState {}

service IotOpService {
  rpc CreateMint(RIotMint) returns (Empty) {
    option (google.api.http) = {
      post: "/api/v1/iot-op/mint"
      body: "*"
    };
  }
  rpc GetMintSigns(RIotGetMintSigns) returns (MintedSigns) {
    option (google.api.http) = {
      post: "/api/v1/iot-op/get-mint-sign"
      body: "*"
    };
  }
  rpc GetMinted(RIotGetMinted) returns (IotMinteds) {
    option (google.api.http) = {
      post: "/api/v1/iot-op/get-minted"
      body: "*"
    };
  }

  rpc CreateAVM(RAVMCreate) returns (AVM) {
    option (google.api.http) = {
      post: "/api/v1/iot-op/avm"
      body: "*"
    };
  }

  rpc GetListAVM(RMAVMGetList) returns (AVMs) {
    option (google.api.http) = {
      get: "/api/v1/iot-op/avm"
      // body: "*"
    };
  }

  rpc UpdateState(RIotUpdateState) returns (Empty) {
    option (google.api.http) = {
      put: "/api/v1/iot-op/state"
      body: "*"
    };
  }
}
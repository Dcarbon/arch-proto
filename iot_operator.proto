syntax = "proto3";

package pb;
option go_package = "/pb";

import "common.proto";
import "iot_models.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Active Volume metric
message AVM {
  string id       = 1;
  string signed   = 2;
  string data     = 3;
  string value    = 4;  // Extracted data
  int64 createdAt = 5;
}

message AVMs {
  int64 total       = 1;
  repeated AVM data = 2;
}

message SensorState {
  int64 id                   = 1;
  int32 state                = 2;
  map<string, double> metric = 3;
}

message IotState {
  int64 id                     = 1;
  int32 state                  = 2;
  repeated SensorState sensors = 3;
  int64 createdAt              = 4;
}

message RAVMCreate {
  string signer = 1;
  string signed = 2;
  string data   = 3;
}

message RAVMGetList {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get metric request",
      description: "Get metric request",
      required: [ "skip", "limit" ],
      // extensions: {
      //   key: "x-a-bit-of-everything-foo"
      //   value: { string_value: "bar" }
      // }
    }
  };

  bool full          = 1;
  int64 skip         = 2;
  int64 limit        = 3;
  int64 iotId        = 5;
  int64 from         = 6;
  int64 to           = 7;
  Sort sort          = 8;
  DInterval interval = 9;
  // int64 sensorId = 4;
}

message RIotMint {
  int64 nonce       = 1;
  string amount     = 2;
  string iotAddress = 3;
  string signed     = 4;
}

message RIotGetMintSigns {
  int64 from  = 1;
  int64 to    = 2;
  int64 iotId = 3;
  Sort sort   = 4;
  int64 limit = 5;
}

message RIotGetMinted {
  int32 interval = 1;
  int64 from     = 2;
  int64 to       = 3;
  int64 iotId    = 4;
  int64 limit    = 5;
}

message RIotUpdateState {
  string signer = 1;  // Iot ethereum address
  string signed = 2;  // Signed data (rsv - base64)
  string data   = 3;  // Json of IotState
}

service IotOpService {
  rpc CreateAVM(RAVMCreate) returns (AVM) {
    option (google.api.http) = {
      post: "/api/v1_1/iot-op/avm"
      body: "*"
    };
  }

  rpc GetListAVM(RAVMGetList) returns (AVMs) {
    option (google.api.http) = {
      get: "/api/v1_1/iot-op/avm"
      // body: "*"
    };
  }

  rpc CreateMint(RIotMint) returns (Empty) {
    option (google.api.http) = {
      post: "/api/v1_1/iot-op/mint"
      body: "*"
    };
  }
  rpc GetMintSigns(RIotGetMintSigns) returns (MintedSigns) {
    option (google.api.http) = {
      post: "/api/v1_1/iot-op/get-mint-sign"
      body: "*"
    };
  }
  rpc GetMinted(RIotGetMinted) returns (IotMinteds) {
    option (google.api.http) = {
      post: "/api/v1_1/iot-op/get-minted"
      body: "*"
    };
  }

  rpc UpdateState(RIotUpdateState) returns (Empty) {
    option (google.api.http) = {
      put: "/api/v1_1/iot-op/state"
      body: "*"
    };
  }

  rpc GetState(IdInt64) returns (IotState) {
    option (google.api.http) = {
      get: "/api/v1_1/iot-op/state"
    };
  }
}